networks:
  chaos:


services:
  postgres1:
    image: postgres:16-alpine
    restart: unless-stopped
    shm_size: 128mb
    volumes:
      - ./demo/data/postgres1:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      start_period: "1s"
      interval: "1s"
      timeout: "5s"
    networks:
      - chaos
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: synapse
      POSTGRES_INITDB_ARGS: --encoding=UTF8 --locale=C
  hs1:
    build:
      context: ./demo/synapse
      args:
        UID: 0
    user: root
    volumes:
      - ./demo/data/hs1:/data
    environment:
      SYNAPSE_SERVER_NAME: hs1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: synapse
      POSTGRES_HOST: postgres1
      HTTP_PROXY: "http://mitmproxy:8080"
      HTTPS_PROXY: "http://mitmproxy:8080"
      UID: 0
    depends_on:
      postgres1:
        condition: service_healthy
    networks:
      - chaos
    ports:
      - 4051:443
  hs2:
    build:
      context: ./demo/synapse
      args:
        UID: 0
    user: root
    volumes:
      - ./demo/data/hs2:/data
    environment:
      SYNAPSE_SERVER_NAME: hs2
      HTTP_PROXY: "http://mitmproxy:8080"
      HTTPS_PROXY: "http://mitmproxy:8080"
      UID: 0
    networks:
      - chaos
    ports:
      - 4052:443
  mitmproxy:
    build:
      context: ./mitmproxy_addons
    command: "mitmdump --set  ssl_insecure=true -s /addons/__init__.py"
    extra_hosts:
      - host.docker.internal=host-gateway
    networks:
      - chaos
    ports:
      - 4050:8080
